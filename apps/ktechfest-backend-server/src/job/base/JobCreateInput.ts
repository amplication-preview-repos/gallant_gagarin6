/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApplicationCreateNestedManyWithoutJobsInput } from "./ApplicationCreateNestedManyWithoutJobsInput";

import {
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
  IsEnum,
} from "class-validator";

import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { StaffAgencyWhereUniqueInput } from "../../staffAgency/base/StaffAgencyWhereUniqueInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { PaymentWhereUniqueInput } from "../../payment/base/PaymentWhereUniqueInput";
import { RatingCreateNestedManyWithoutJobsInput } from "./RatingCreateNestedManyWithoutJobsInput";
import { SkillCreateNestedManyWithoutJobsInput } from "./SkillCreateNestedManyWithoutJobsInput";
import { EnumJobStatus } from "./EnumJobStatus";

@InputType()
class JobCreateInput {
  @ApiProperty({
    required: false,
    type: () => ApplicationCreateNestedManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => ApplicationCreateNestedManyWithoutJobsInput)
  @IsOptional()
  @Field(() => ApplicationCreateNestedManyWithoutJobsInput, {
    nullable: true,
  })
  applications?: ApplicationCreateNestedManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  assignedTo?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StaffAgencyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StaffAgencyWhereUniqueInput)
  @IsOptional()
  @Field(() => StaffAgencyWhereUniqueInput, {
    nullable: true,
  })
  associatedAgency?: StaffAgencyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  availability?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  completed?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  cv?: InputJsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isAcceptedByAgency?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPaid?: boolean | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @Field(() => Number)
  payRate!: number;

  @ApiProperty({
    required: false,
    type: () => PaymentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PaymentWhereUniqueInput)
  @IsOptional()
  @Field(() => PaymentWhereUniqueInput, {
    nullable: true,
  })
  payments?: PaymentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => RatingCreateNestedManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => RatingCreateNestedManyWithoutJobsInput)
  @IsOptional()
  @Field(() => RatingCreateNestedManyWithoutJobsInput, {
    nullable: true,
  })
  ratings?: RatingCreateNestedManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: () => SkillCreateNestedManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => SkillCreateNestedManyWithoutJobsInput)
  @IsOptional()
  @Field(() => SkillCreateNestedManyWithoutJobsInput, {
    nullable: true,
  })
  requiredSkills?: SkillCreateNestedManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    enum: EnumJobStatus,
  })
  @IsEnum(EnumJobStatus)
  @IsOptional()
  @Field(() => EnumJobStatus, {
    nullable: true,
  })
  status?: "Pending" | "Assigned" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  title!: string;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { JobCreateInput as JobCreateInput };
