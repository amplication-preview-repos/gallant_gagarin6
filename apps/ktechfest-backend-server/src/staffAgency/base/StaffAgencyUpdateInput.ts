/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import {
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ApplicationUpdateManyWithoutStaffAgenciesInput } from "./ApplicationUpdateManyWithoutStaffAgenciesInput";
import { Type } from "class-transformer";
import { StaffUpdateManyWithoutStaffAgenciesInput } from "./StaffUpdateManyWithoutStaffAgenciesInput";
import { JobWhereUniqueInput } from "../../job/base/JobWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PayrollUpdateManyWithoutStaffAgenciesInput } from "./PayrollUpdateManyWithoutStaffAgenciesInput";

@InputType()
class StaffAgencyUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  agencyDetails?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  agencyName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ApplicationUpdateManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => ApplicationUpdateManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => ApplicationUpdateManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  applications?: ApplicationUpdateManyWithoutStaffAgenciesInput;

  @ApiProperty({
    required: false,
    type: () => StaffUpdateManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => StaffUpdateManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => StaffUpdateManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  employedStaff?: StaffUpdateManyWithoutStaffAgenciesInput;

  @ApiProperty({
    required: false,
    type: () => JobWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobWhereUniqueInput)
  @IsOptional()
  @Field(() => JobWhereUniqueInput, {
    nullable: true,
  })
  jobs?: JobWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PayrollUpdateManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => PayrollUpdateManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => PayrollUpdateManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  payrolls?: PayrollUpdateManyWithoutStaffAgenciesInput;
}

export { StaffAgencyUpdateInput as StaffAgencyUpdateInput };
