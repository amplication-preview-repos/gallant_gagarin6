/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import {
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ApplicationCreateNestedManyWithoutStaffAgenciesInput } from "./ApplicationCreateNestedManyWithoutStaffAgenciesInput";
import { Type } from "class-transformer";
import { StaffCreateNestedManyWithoutStaffAgenciesInput } from "./StaffCreateNestedManyWithoutStaffAgenciesInput";
import { JobWhereUniqueInput } from "../../job/base/JobWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PayrollCreateNestedManyWithoutStaffAgenciesInput } from "./PayrollCreateNestedManyWithoutStaffAgenciesInput";

@InputType()
class StaffAgencyCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  agencyDetails?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  agencyName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ApplicationCreateNestedManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => ApplicationCreateNestedManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => ApplicationCreateNestedManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  applications?: ApplicationCreateNestedManyWithoutStaffAgenciesInput;

  @ApiProperty({
    required: false,
    type: () => StaffCreateNestedManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => StaffCreateNestedManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => StaffCreateNestedManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  employedStaff?: StaffCreateNestedManyWithoutStaffAgenciesInput;

  @ApiProperty({
    required: false,
    type: () => JobWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobWhereUniqueInput)
  @IsOptional()
  @Field(() => JobWhereUniqueInput, {
    nullable: true,
  })
  jobs?: JobWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  owner!: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PayrollCreateNestedManyWithoutStaffAgenciesInput,
  })
  @ValidateNested()
  @Type(() => PayrollCreateNestedManyWithoutStaffAgenciesInput)
  @IsOptional()
  @Field(() => PayrollCreateNestedManyWithoutStaffAgenciesInput, {
    nullable: true,
  })
  payrolls?: PayrollCreateNestedManyWithoutStaffAgenciesInput;
}

export { StaffAgencyCreateInput as StaffAgencyCreateInput };
