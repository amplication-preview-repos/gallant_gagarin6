/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { JsonFilter } from "../../util/JsonFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ApplicationListRelationFilter } from "../../application/base/ApplicationListRelationFilter";
import { StaffListRelationFilter } from "../../staff/base/StaffListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { JobWhereUniqueInput } from "../../job/base/JobWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { PayrollListRelationFilter } from "../../payroll/base/PayrollListRelationFilter";

@InputType()
class StaffAgencyWhereInput {
  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  agencyDetails?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  agencyName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ApplicationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ApplicationListRelationFilter)
  @IsOptional()
  @Field(() => ApplicationListRelationFilter, {
    nullable: true,
  })
  applications?: ApplicationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StaffListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StaffListRelationFilter)
  @IsOptional()
  @Field(() => StaffListRelationFilter, {
    nullable: true,
  })
  employedStaff?: StaffListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => JobWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobWhereUniqueInput)
  @IsOptional()
  @Field(() => JobWhereUniqueInput, {
    nullable: true,
  })
  jobs?: JobWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PayrollListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PayrollListRelationFilter)
  @IsOptional()
  @Field(() => PayrollListRelationFilter, {
    nullable: true,
  })
  payrolls?: PayrollListRelationFilter;
}

export { StaffAgencyWhereInput as StaffAgencyWhereInput };
